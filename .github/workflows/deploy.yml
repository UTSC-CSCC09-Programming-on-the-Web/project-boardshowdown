name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feat-deploy
    paths:
      - 'frontend/**'
      - 'backend/**'

env:
  FRONTEND_IMAGE_NAME: frontend-boardshowdown
  BACKEND_IMAGE_NAME: backend-boardshowdown

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v2

      - name: Build frontend image
        run: docker build . --file Dockerfile --tag $FRONTEND_IMAGE_NAME

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.VM_DEPLOY }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push frontend image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$FRONTEND_IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $FRONTEND_IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  build-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v2

      - name: Build backend image
        run: docker build . --file Dockerfile --tag $BACKEND_IMAGE_NAME

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.VM_DEPLOY }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push backend image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$BACKEND_IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $BACKEND_IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  deploy:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    steps:
      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: boardshowdown.com
          username: root
          key: ${{ secrets.VM_SSH_KEY }}
          envs: VM_DEPLOY
          script: |
            echo "$VM_DEPLOY" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            cd /path/to/your/project-boardshowdown
            docker compose down -v
            docker system prune -a --volumes -f
            docker compose pull
            docker compose up -d
        env:
          VM_DEPLOY: ${{ secrets.VM_DEPLOY }}
